name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-beta.*'
      - 'v*.*.*-alpha.*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify branch is main
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          BRANCHES=$(git branch -r --contains tags/$TAG)
          if [[ ! "$BRANCHES" == *"origin/main"* ]]; then
            echo "Tag $TAG is not on the main branch. Stopping workflow."
            exit 1
          fi
      
      - name: Verify file existence
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          FILE_NAME=".github/changelogs/${TAG}.md"
          if [ ! -f "$FILE_NAME" ]; then
            echo "File $FILE_NAME does not exist. Stopping workflow."
            exit 1
          fi

      - name: Build Docker image
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          IMAGE_TAG=${TAG#v}
          docker build -t eml-admintool:$IMAGE_TAG -f docker/Dockerfile.build .
      
      - name: Save Docker image as tarball
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          IMAGE_TAG=${TAG#v}
          docker save eml-admintool:$IMAGE_TAG > eml-admintool-$IMAGE_TAG.tar
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      
      - name: Create tarball
        run: |
          TAR_FILE=eml-admintool-$IMAGE_TAG.tar.gz
          tar -czf $TAR_FILE eml-admintool-$IMAGE_TAG.tar -C docker docker-compose.prod.yml
          echo "TAR_FILE=$TAR_FILE" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: EML AdminTool ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          body_path: .github/changelogs/${{ github.ref_name }}.md
          files: eml-admintool-${{ env.IMAGE_TAG }}.tar.gz
