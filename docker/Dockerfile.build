# BUILD STAGE

FROM node:24-alpine AS build

WORKDIR /app

COPY . .

RUN npm i --ignore-scripts

WORKDIR /app/api
RUN npm run build

WORKDIR /app/client
RUN npm run build

# PRODUCTION STAGE

FROM node:24-alpine

WORKDIR /app

RUN wget -qO- https://download.docker.com/linux/assets/stable/x86_64/docker-27.5.1.tgz | tar -xz && \
  mv docker/docker /usr/local/bin/ && \
  rm -rf docker

RUN wget -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/v2.33.1/docker-compose-linux-x86_64 && \
  chmod +x /usr/local/bin/docker-compose

COPY --from=build /app/dist/api ./api
COPY --from=build /app/dist/client ./client
COPY --from=build /app/dist/shared ./shared

COPY --from=build /app/api/package.json ./api/package.json
COPY --from=build /app/client/package.json ./client/package.json
COPY --from=build /app/shared/package.json ./shared/package.json

COPY --from=build /app/package.json ./package.json
COPY --from=build /app/package-lock.json ./package-lock.json
COPY --from=build /app/LICENSE ./LICENSE

RUN npm ci --ignore-scripts --omit=dev

EXPOSE 3000

CMD ["npm", "run", "serve"]